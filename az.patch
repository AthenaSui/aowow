diff --git a/icon.png b/icon.png
new file mode 100644
index 0000000..c17f010
Binary files /dev/null and b/icon.png differ
diff --git a/includes/defines.php b/includes/defines.php
index 6872e93..9d389bb 100644
--- a/includes/defines.php
+++ b/includes/defines.php
@@ -36,7 +36,7 @@ define('CACHE_TYPE_PAGE',                   1);
 define('CACHE_TYPE_TOOLTIP',                2);
 define('CACHE_TYPE_SEARCH',                 3);
 define('CACHE_TYPE_XML',                    4);             // only used by items
-
+define('int', 1);
 define('CACHE_MODE_FILECACHE',              0x1);
 define('CACHE_MODE_MEMCACHED',              0x2);
 
diff --git a/includes/game.php b/includes/game.php
index 625c535..b743697 100644
--- a/includes/game.php
+++ b/includes/game.php
@@ -102,6 +102,38 @@ class Game
         )
     );
 
+    public static $trainerTemplates         = array(        // TYPE => Id => templateList
+        Type::CHR_CLASS => array(
+              1 => [-200001, -200002],                      // Warrior
+              2 => [-200003, -200004, -200020, -200021],    // Paladin
+              3 => [-200013, -200014],                      // Hunter
+              4 => [-200015, -200016],                      // Rogue
+              5 => [-200011, -200012],                      // Priest
+              6 => [-200019],                               // DK
+              7 => [-200017, -200018],                      // Shaman (HighlevelAlly Id missing..?)
+              8 => [-200007, -200008],                      // Mage
+              9 => [-200009, -200010],                      // Warlock
+             11 => [-200005, -200006]                       // Druid
+        ),
+        Type::SKILL => array(
+            171 => [-201001, -201002, -201003],             // Alchemy
+            164 => [-201004, -201005, -201006, -201007, -201008],// Blacksmithing
+            333 => [-201009, -201010, -201011],             // Enchanting
+            202 => [-201012, -201013, -201014, -201015, -201016, -201017], // Engineering
+            182 => [-201018, -201019, -201020],             // Herbalism
+            773 => [-201021, -201022, -201023],             // Inscription
+            755 => [-201024, -201025, -201026],             // Jewelcrafting
+            165 => [-201027, -201028, -201029, -201030, -201031, -201032], // Leatherworking
+            186 => [-201033, -201034, -201035],             // Mining
+            393 => [-201036, -201037, -201038],             // Skinning
+            197 => [-201039, -201040, -201041, -201042],    // Tailoring
+            356 => [-202001, -202002, -202003],             // Fishing
+            185 => [-202004, -202005, -202006],             // Cooking
+            129 => [-202007, -202008, -202009],             // First Aid
+            762 => [-202010, -202011, -202012]              // Riding
+        )
+    );
+
     public static $sockets                  = array(        // jsStyle Strings
         'meta',                         'red',                          'yellow',                       'blue'
     );
@@ -327,7 +359,7 @@ class Game
         switch ($type)
         {
             case Type::NPC:
-                $result = DB::World()->select('SELECT `guid` AS ARRAY_KEY, `id`, `map` AS `mapId`, `position_y` AS `posX`, `position_x` AS `posY` FROM creature WHERE `guid` IN (?a)', $guids);
+                $result = DB::World()->select('SELECT `guid` AS ARRAY_KEY, `id1`, `map` AS `mapId`, `position_y` AS `posX`, `position_x` AS `posY` FROM creature WHERE `guid` IN (?a)', $guids);
                 break;
             case Type::OBJECT:
                 $result = DB::World()->select('SELECT `guid` AS ARRAY_KEY, `id`, `map` AS `mapId`, `position_y` AS `posX`, `position_x` AS `posY` FROM gameobject WHERE `guid` IN (?a)', $guids);
@@ -398,8 +430,8 @@ class Game
                 ct.`Type` AS `talkType`,
                 ct.TextRange AS `range`,
                 IFNULL(bct.`LanguageID`, ct.`Language`) AS lang,
-                IFNULL(NULLIF(bct.Text, ""), IFNULL(NULLIF(bct.Text1, ""), IFNULL(ct.`Text`, ""))) AS text_loc0,
-               {IFNULL(NULLIF(bctl.Text, ""), IFNULL(NULLIF(bctl.Text1, ""), IFNULL(ctl.Text, ""))) AS text_loc?d,}
+                IFNULL(NULLIF(bct.MaleText, ""), IFNULL(NULLIF(bct.FemaleText, ""), IFNULL(ct.`Text`, ""))) AS text_loc0,
+               {IFNULL(NULLIF(bctl.MaleText, ""), IFNULL(NULLIF(bctl.FemaleText, ""), IFNULL(ctl.Text, ""))) AS text_loc?d,}
                 IF(bct.SoundEntriesID > 0, bct.SoundEntriesID, ct.Sound) AS soundId
             FROM
                 creature_text ct
@@ -525,5 +557,3 @@ class Game
         }
     }
 }
-
-?>
diff --git a/includes/kernel.php b/includes/kernel.php
index 82b8e5a..22bfbaf 100644
--- a/includes/kernel.php
+++ b/includes/kernel.php
@@ -3,12 +3,14 @@
 if (!defined('AOWOW_REVISION'))
     die('illegal access');
 
-
 if (file_exists('config/config.php'))
     require_once 'config/config.php';
 else
     $AoWoWconf = [];
 
+if (!defined('STDOUT')) {
+    define('STDOUT', fopen('php://stdout', 'w'));
+}
 
 mb_internal_encoding('UTF-8');
 
diff --git a/includes/profiler.class.php b/includes/profiler.class.php
index 010be28..76b99fb 100644
--- a/includes/profiler.class.php
+++ b/includes/profiler.class.php
@@ -445,7 +445,7 @@ class Profiler
         /* talents + glyphs */
         /********************/
 
-        $t = DB::Characters($realmId)->selectCol('SELECT talentGroup AS ARRAY_KEY, spell AS ARRAY_KEY2, spell FROM character_talent WHERE guid = ?d', $char['guid']);
+        $t = DB::Characters($realmId)->selectCol('SELECT specMask AS ARRAY_KEY, spell AS ARRAY_KEY2, spell FROM character_talent WHERE guid = ?d', $char['guid']);
         $g = DB::Characters($realmId)->select('SELECT talentGroup AS ARRAY_KEY, glyph1 AS g1, glyph2 AS g4, glyph3 AS g5, glyph4 AS g2, glyph5 AS g3, glyph6 AS g6 FROM character_glyphs WHERE guid = ?d', $char['guid']);
         for ($i = 0; $i < 2; $i++)
         {
@@ -522,7 +522,7 @@ class Profiler
         if ($cl == CLASS_HUNTER)
         {
             DB::Aowow()->query('DELETE FROM ?_profiler_pets WHERE `owner` = ?d', $profileId);
-            $pets = DB::Characters($realmId)->select('SELECT `id` AS ARRAY_KEY, `entry`, `modelId`, `name` FROM character_pet WHERE `owner` = ?d', $charGuid);
+            $pets = DB::Characters($realmId)->select('SELECT `id` AS ARRAY_KEY, `entry`, `modelid`, `name` FROM character_pet WHERE `owner` = ?d', $charGuid);
             foreach ($pets as $petGuid => $petData)
             {
                 $petSpells = DB::Characters($realmId)->selectCol('SELECT `spell` FROM pet_spell WHERE `guid` = ?d', $petGuid);
@@ -693,7 +693,7 @@ class Profiler
 
 
         // known spells
-        if ($spells = DB::Characters($realmId)->select('SELECT ?d AS id, ?d AS `type`, spell AS typeId FROM character_spell WHERE guid = ?d AND disabled = 0', $profileId, Type::SPELL, $char['guid']))
+        if ($spells = DB::Characters($realmId)->select('SELECT ?d AS id, ?d AS `type`, spell AS typeId FROM character_spell WHERE guid = ?d AND specMask =1', $profileId, Type::SPELL, $char['guid']))
             foreach (Util::createSqlBatchInsert($spells) as $s)
                 DB::Aowow()->query('INSERT INTO ?_profiler_completion (?#) VALUES '.$s, array_keys($spells[0]));
 
@@ -785,7 +785,7 @@ class Profiler
 
     public static function getGuildFromRealm($realmId, $guildGuid)
     {
-        $guild = DB::Characters($realmId)->selectRow('SELECT guildId, name, createDate, info, backgroundColor, emblemStyle, emblemColor, borderStyle, borderColor FROM guild WHERE guildId = ?d', $guildGuid);
+        $guild = DB::Characters($realmId)->selectRow('SELECT guildid, name, createDate, info, BackgroundColor, EmblemStyle, EmblemColor, BorderStyle, BorderColor FROM guild WHERE guildid = ?d', $guildGuid);
         if (!$guild)
             return false;
 
@@ -889,7 +889,7 @@ class Profiler
 
         $members = DB::Characters($realmId)->select('
             SELECT
-                atm.guid AS ARRAY_KEY, atm.arenaTeamId, atm.weekGames, atm.weekWins, atm.seasonGames, atm.seasonWins, atm.personalrating
+                atm.guid AS ARRAY_KEY, atm.arenaTeamId, atm.weekGames, atm.weekWins, atm.seasonGames, atm.seasonWins, atm.personalRating
             FROM
                 arena_team_member atm
             JOIN
diff --git a/includes/smartAI.class.php b/includes/smartAI.class.php
index 67b7649..70f417b 100644
--- a/includes/smartAI.class.php
+++ b/includes/smartAI.class.php
@@ -36,7 +36,7 @@ class SmartAI
         );
 
         if ($npcGuids = DB::Aowow()->selectCol('SELECT guid FROM ?_spawns WHERE `type` = ?d AND `typeId` = ?d', Type::NPC, $npcId))
-            if ($groups = DB::World()->selectCol('SELECT `groupId` FROM spawn_group WHERE `spawnType` = 0 AND `spawnId` IN (?a)', $npcGuids))
+            if ($groups = DB::World()->selectCol('SELECT `groupId` FROM tc_spawn_group WHERE `spawnType` = 0 AND `spawnId` IN (?a)', $npcGuids))
                 foreach ($groups as $g)
                     $lookup[SAI_ACTION_SPAWN_SPAWNGROUP][1] = $g;
 
@@ -60,7 +60,7 @@ class SmartAI
         );
 
         if ($objGuids = DB::Aowow()->selectCol('SELECT guid FROM ?_spawns WHERE `type` = ?d AND `typeId` = ?d', Type::OBJECT, $objectId))
-            if ($groups = DB::World()->selectCol('SELECT `groupId` FROM spawn_group WHERE `spawnType` = 1 AND `spawnId` IN (?a)', $objGuids))
+            if ($groups = DB::World()->selectCol('SELECT `groupId` FROM tc_spawn_group WHERE `spawnType` = 1 AND `spawnId` IN (?a)', $objGuids))
                 foreach ($groups as $g)
                     $lookup[SAI_ACTION_SPAWN_SPAWNGROUP][1] = $g;
 
@@ -213,7 +213,7 @@ class SmartAI
         if (!empty($moreInfo[SAI_ACTION_SPAWN_SPAWNGROUP]))
         {
             $grp = $moreInfo[SAI_ACTION_SPAWN_SPAWNGROUP];
-            if ($sgs = DB::World()->selectCol('SELECT `spawnId` FROM spawn_group WHERE `spawnType` = ?d AND `groupId` IN (?a)', 0 /*0:SUMMONER_TYPE_CREATURE*/, $grp))
+            if ($sgs = DB::World()->selectCol('SELECT `spawnId` FROM tc_spawn_group WHERE `spawnType` = ?d AND `groupId` IN (?a)', 0 /*0:SUMMONER_TYPE_CREATURE*/, $grp))
                 if ($ids = DB::Aowow()->selectCol('SELECT DISTINCT `typeId` FROM ?_spawns WHERE `type` = ?d AND `guid` IN (?a)', Type::NPC, $sgs))
                     $result = array_merge($result, $ids);
         }
@@ -234,7 +234,7 @@ class SmartAI
         if (!empty($moreInfo[SAI_ACTION_SPAWN_SPAWNGROUP]))
         {
             $grp = $moreInfo[SAI_ACTION_SPAWN_SPAWNGROUP];
-            if ($sgs = DB::World()->selectCol('SELECT `spawnId` FROM spawn_group WHERE `spawnType` = ?d AND `groupId` IN (?a)', 1 /*1:SUMMONER_TYPE_GAMEOBJECT*/, $grp))
+            if ($sgs = DB::World()->selectCol('SELECT `spawnId` FROM tc_spawn_group WHERE `spawnType` = ?d AND `groupId` IN (?a)', 1 /*1:SUMMONER_TYPE_GAMEOBJECT*/, $grp))
                 if ($ids = DB::Aowow()->selectCol('SELECT DISTINCT `typeId` FROM ?_spawns WHERE `type` = ?d AND `guid` IN (?a)', Type::OBJECT, $sgs))
                     $result = array_merge($result, $ids);
         }
@@ -524,7 +524,7 @@ class SmartAI
         switch ($this->itr['target']['type'])
         {
             case SAI_TARGET_CREATURE_GUID:
-                if ($id = DB::World()->selectCell('SELECT id FROM creature WHERE guid = ?d', $this->itr['target']['param'][0]))
+                if ($id = DB::World()->selectCell('SELECT id1 FROM creature WHERE guid = ?d', $this->itr['target']['param'][0]))
                     return $id;
 
                 break;
@@ -732,7 +732,7 @@ class SmartAI
                 $t['param'][10] = $getDist($t['param'][1], $t['param'][2]);
                 break;
             case SAI_TARGET_CREATURE_GUID:                  // 10
-                if ($t['param'][10] = DB::World()->selectCell('SELECT id FROM creature WHERE guid = ?d', $t['param'][0]))
+                if ($t['param'][10] = DB::World()->selectCell('SELECT id1 FROM creature WHERE guid = ?d', $t['param'][0]))
                     $this->jsGlobals[Type::NPC][] = $t['param'][10];
                 else
                     trigger_error('SmartAI::resloveTarget - creature with guid '.$t['param'][0].' not in DB');
@@ -941,7 +941,7 @@ class SmartAI
                 break;
             case SAI_EVENT_DISTANCE_CREATURE:               // 75  -  On creature guid OR any instance of creature entry is within distance.
                 if ($e['param'][0])
-                    $e['param'][10] = DB::World()->selectCell('SELECT id FROM creature WHERE guid = ?d', $e['param'][0]);
+                    $e['param'][10] = DB::World()->selectCell('SELECT id1 FROM creature WHERE guid = ?d', $e['param'][0]);
                 // do not break;
             case SAI_EVENT_DISTANCE_GAMEOBJECT:             // 76  -  On gameobject guid OR any instance of gameobject entry is within distance.
                 if ($e['param'][0] && !$e['param'][10])
@@ -1565,8 +1565,8 @@ class SmartAI
                 break;
             case SAI_ACTION_SPAWN_SPAWNGROUP:               // 131
             case SAI_ACTION_DESPAWN_SPAWNGROUP:             // 132
-                $a['param'][6] = DB::World()->selectCell('SELECT `GroupName` FROM spawn_group_template WHERE `groupId` = ?d', $a['param'][0]);
-                $entities = DB::World()->select('SELECT `spawnType` AS "0", `spawnId` AS "1" FROM spawn_group WHERE `groupId` = ?d',  $a['param'][0]);
+                $a['param'][6] = DB::World()->selectCell('SELECT `GroupName` FROM tc_spawn_group_template WHERE `groupId` = ?d', $a['param'][0]);
+                $entities = DB::World()->select('SELECT `spawnType` AS "0", `spawnId` AS "1" FROM tc_spawn_group WHERE `groupId` = ?d',  $a['param'][0]);
 
                 $n = 5;
                 foreach ($entities as [$spawnType, $guid])
diff --git a/includes/types/achievement.class.php b/includes/types/achievement.class.php
index b9559d7..364cfe6 100644
--- a/includes/types/achievement.class.php
+++ b/includes/types/achievement.class.php
@@ -37,7 +37,7 @@ class AchievementList extends BaseType
             SELECT
                 ar.ID AS ARRAY_KEY, ar.TitleA, ar.TitleH, ar.ItemID, ar.Sender AS sender, ar.MailTemplateID,
                 ar.Subject AS subject_loc0, IFNULL(arl2.Subject, "") AS subject_loc2, IFNULL(arl3.Subject, "") AS subject_loc3, IFNULL(arl4.Subject, "") AS subject_loc4, IFNULL(arl6.Subject, "") AS subject_loc6, IFNULL(arl8.Subject, "") AS subject_loc8,
-                ar.Body    AS text_loc0,    IFNULL(arl2.Body,    "") AS text_loc2,    IFNULL(arl3.Body,    "") AS text_loc3,    IFNULL(arl4.Body,    "") AS text_loc4,    IFNULL(arl6.Body,    "") AS text_loc6,    IFNULL(arl8.Body,    "") AS text_loc8
+                ar.Body    AS text_loc0,    IFNULL(arl2.Text,    "") AS text_loc2,    IFNULL(arl3.Text,    "") AS text_loc3,    IFNULL(arl4.Text,    "") AS text_loc4,    IFNULL(arl6.Text,    "") AS text_loc6,    IFNULL(arl8.Text,    "") AS text_loc8
             FROM
                 achievement_reward ar
             LEFT JOIN
diff --git a/includes/types/item.class.php b/includes/types/item.class.php
index 8699c01..541e3ae 100644
--- a/includes/types/item.class.php
+++ b/includes/types/item.class.php
@@ -105,7 +105,7 @@ class ItemList extends BaseType
             $rawEntries = DB::World()->select('
                 SELECT   nv.item,       nv.entry,             0  AS eventId,   nv.maxcount,   nv.extendedCost,   nv.incrtime FROM            npc_vendor   nv                                                                                                  WHERE {nv.entry IN (?a) AND} nv.item IN (?a)
                 UNION
-                SELECT genv.item, c.id AS `entry`, ge.eventEntry AS eventId, genv.maxcount, genv.extendedCost, genv.incrtime FROM game_event_npc_vendor genv LEFT JOIN game_event ge ON genv.eventEntry = ge.eventEntry JOIN creature c ON c.guid = genv.guid WHERE {c.id IN (?a) AND}   genv.item IN (?a)',
+                SELECT genv.item, c.id1 AS `entry`, ge.eventEntry AS eventId, genv.maxcount, genv.extendedCost, genv.incrtime FROM game_event_npc_vendor genv LEFT JOIN game_event ge ON genv.eventEntry = ge.eventEntry JOIN creature c ON c.guid = genv.guid WHERE {c.id1 IN (?a) AND}   genv.item IN (?a)',
                 empty($filter[Type::NPC]) || !is_array($filter[Type::NPC]) ? DBSIMPLE_SKIP : $filter[Type::NPC],
                 array_keys($this->templates),
                 empty($filter[Type::NPC]) || !is_array($filter[Type::NPC]) ? DBSIMPLE_SKIP : $filter[Type::NPC],
@@ -2388,7 +2388,7 @@ class ItemListFilter extends Filter
         if (!Util::checkNumeric($cr[2], NUM_CAST_INT))
             return false;
 
-        if ($iIds = DB::World()->selectCol('SELECT item FROM npc_vendor WHERE entry = ?d UNION SELECT item FROM game_event_npc_vendor v JOIN creature c ON c.guid = v.guid WHERE c.id = ?d', $cr[2], $cr[2]))
+        if ($iIds = DB::World()->selectCol('SELECT item FROM npc_vendor WHERE entry = ?d UNION SELECT item FROM game_event_npc_vendor v JOIN creature c ON c.guid = v.guid WHERE c.id1 = ?d', $cr[2], $cr[2]))
             return ['i.id', $iIds];
         else
             return [0];
diff --git a/includes/types/profile.class.php b/includes/types/profile.class.php
index 63d3194..845409e 100644
--- a/includes/types/profile.class.php
+++ b/includes/types/profile.class.php
@@ -603,7 +603,7 @@ class RemoteProfileList extends ProfileList
         }
 
         foreach ($talentLookup as $realm => $chars)
-            $talentLookup[$realm] = DB::Characters($realm)->selectCol('SELECT guid AS ARRAY_KEY, spell AS ARRAY_KEY2, talentGroup FROM character_talent ct WHERE guid IN (?a)', array_keys($chars));
+            $talentLookup[$realm] = DB::Characters($realm)->selectCol('SELECT guid AS ARRAY_KEY, spell AS ARRAY_KEY2, specMask FROM character_talent ct WHERE guid IN (?a)', array_keys($chars));
 
         $talentSpells = DB::Aowow()->select('SELECT spell AS ARRAY_KEY, tab, `rank` FROM ?_talents WHERE class IN (?a)', array_unique($talentSpells));
 
diff --git a/includes/types/spell.class.php b/includes/types/spell.class.php
index aa91315..52a6275 100644
--- a/includes/types/spell.class.php
+++ b/includes/types/spell.class.php
@@ -1076,6 +1076,14 @@ class SpellList extends BaseType
         // hm, minor eval-issue. eval doesnt understand two operators without a space between them (eg. spelll: 18126)
         $formula = preg_replace('/(\+|-|\*|\/)(\+|-|\*|\/)/i', '\1 \2', $formula);
 
+        // remove first or last character if it is not a number
+        if (!is_numeric(substr($formula, -1)) && substr($formula, -1) !== ')') {
+            $formula = substr($formula, 0, -1);
+        }
+        if (!is_numeric(substr($formula, 0, 1)) && substr($formula, -1) !== ')') {
+            $formula = substr($formula, 1);
+        }
+
         // there should not be any letters without a leading $
         return eval('return '.$formula.';');
     }
@@ -2710,9 +2718,9 @@ class SpellListFilter extends Filter
         if (is_int($_))                         // specific
             return ['src.src'.$_, null, '!'];
         else if ($_)                            // any
-            return ['OR', ['src.src1', null, '!'], ['src.src2', null, '!'], ['src.src4', null, '!'], ['src.src5', null, '!'], ['src.src6', null, '!'], ['src.src7', null, '!'], ['src.src9', null, '!'], ['src.src10', null, '!']];
+            return ['OR', ['src.src1', null, '!'], ['src.src2', null, '!'], ['src.src4', null, '!'], ['src.src5', null, '!'], ['src.src6', null, '!'], ['src.src7', null, '!'], ['src.src9', null, '!']];
         else if (!$_)                           // none
-            return ['AND', ['src.src1', null], ['src.src2', null], ['src.src4', null], ['src.src5', null], ['src.src6', null], ['src.src7', null], ['src.src9', null], ['src.src10', null]];
+            return ['AND', ['src.src1', null], ['src.src2', null], ['src.src4', null], ['src.src5', null], ['src.src6', null], ['src.src7', null], ['src.src9', null]];
 
         return false;
     }
diff --git a/localization/locale_zhcn.php b/localization/locale_zhcn.php
index 5bee11c..d2298ec 100644
--- a/localization/locale_zhcn.php
+++ b/localization/locale_zhcn.php
@@ -1494,7 +1494,11 @@ $lang = array(
         'stackGroup'    => "Stack Group",
         'linkedWith'    => "Linked with",
         '_scaling'      => "缩放比例",
-        'instantPhys'   => "瞬发",
+        'scaling'       => array(
+            'directSP' => "直接效果的攻击强度 +%.2f%%",         'directAP' => "直接效果的攻击强度 +%.2f%%",
+            'dotSP'    => "每个周期的法术强度 +%.2f%%",                    'dotAP'    => "每个周期的攻击强度 +%.2f%%"
+        ),
+		'instantPhys'   => "瞬发",		
         'castTime' => array(
             "瞬发法术",
             "%.3g秒施法时间",
@@ -1540,10 +1544,6 @@ $lang = array(
               -1 => "弹药",              -41 => "蓝铁",            -61 => "蒸汽动力",   -101 => "能量",             -121 => "软泥",             -141 => "鲜血之力",
             -142 => "愤怒"
         ),
-        'scaling'       => array(
-            'directSP' => "直接效果的攻击强度 +%.2f%%",         'directAP' => "直接效果的攻击强度 +%.2f%%t",
-            'dotSP'    => "每个周期的法术强度 +%.2f%%",                    'dotAP'    => "每个周期的攻击强度 +%.2f%%"
-        ),
         'relItems'      => array(
             'base'    => "<small>显示与<b>%s</b>相关的 %s<</small>",
             'link'    => "或",
diff --git a/pages/class.php b/pages/class.php
index 57b03e7..8ab439e 100644
--- a/pages/class.php
+++ b/pages/class.php
@@ -213,7 +213,7 @@ class ClassPage extends GenericPage
         $conditions = array(
             ['npcflag', 0x30, '&'],                             // is trainer
             ['trainerType', 0],                                 // trains class spells
-            ['trainerRequirement', $this->typeId]
+            ['trainerClass', $this->typeId]
         );
 
         $trainer = new CreatureList($conditions);
diff --git a/pages/event.php b/pages/event.php
index c9e3ceb..fe16796 100644
--- a/pages/event.php
+++ b/pages/event.php
@@ -109,7 +109,7 @@ class EventPage extends GenericPage
         $hasFilter = in_array($this->hId, [372, 283, 285, 353, 420, 400, 284, 201, 374, 409, 141, 324, 321, 424, 335, 327, 341, 181, 404, 398, 301]);
 
         // tab: npcs
-        if ($npcIds = DB::World()->selectCol('SELECT id AS ARRAY_KEY, IF(ec.eventEntry > 0, 1, 0) AS added FROM creature c, game_event_creature ec WHERE ec.guid = c.guid AND ABS(ec.eventEntry) = ?d', $this->eId))
+        if ($npcIds = DB::World()->selectCol('SELECT id1 AS ARRAY_KEY, IF(ec.eventEntry > 0, 1, 0) AS added FROM creature c, game_event_creature ec WHERE ec.guid = c.guid AND ABS(ec.eventEntry) = ?d', $this->eId))
         {
             $creatures = new CreatureList(array(['id', array_keys($npcIds)]));
             if (!$creatures->error)
@@ -205,7 +205,7 @@ class EventPage extends GenericPage
         {
             // vendor
             $cIds = $creatures->getFoundIDs();
-            if ($sells = DB::World()->selectCol('SELECT item FROM npc_vendor nv WHERE entry IN (?a) UNION SELECT item FROM game_event_npc_vendor genv JOIN creature c ON genv.guid = c.guid WHERE c.id IN (?a)', $cIds, $cIds))
+            if ($sells = DB::World()->selectCol('SELECT item FROM npc_vendor nv WHERE entry IN (?a) UNION SELECT item FROM game_event_npc_vendor genv JOIN creature c ON genv.guid = c.guid WHERE c.id1 IN (?a)', $cIds, $cIds))
                 $itemCnd[] = ['id', $sells];
         }
 
diff --git a/pages/npc.php b/pages/npc.php
index 81a8ad6..118b715 100644
--- a/pages/npc.php
+++ b/pages/npc.php
@@ -127,7 +127,7 @@ class NpcPage extends GenericPage
         $infobox = Lang::getInfoBoxForFlags($this->subject->getField('cuFlags'));
 
         // Event (ignore events, where the object only gets removed)
-        if ($_ = DB::World()->selectCol('SELECT DISTINCT ge.eventEntry FROM game_event ge, game_event_creature gec, creature c WHERE ge.eventEntry = gec.eventEntry AND c.guid = gec.guid AND c.id = ?d', $this->typeId))
+        if ($_ = DB::World()->selectCol('SELECT DISTINCT ge.eventEntry FROM game_event ge, game_event_creature gec, creature c WHERE ge.eventEntry = gec.eventEntry AND c.guid = gec.guid AND c.id1 = ?d', $this->typeId))
         {
             $this->extendGlobalIds(Type::WORLDEVENT, ...$_);
             $ev = [];
@@ -379,7 +379,7 @@ class NpcPage extends GenericPage
             if (!$sai->prepare())                           // no smartAI found .. check per guid
             {
                 // at least one of many
-                $guids = DB::World()->selectCol('SELECT guid FROM creature WHERE id = ?d', $this->typeId);
+                $guids = DB::World()->selectCol('SELECT guid FROM creature WHERE id1 = ?d', $this->typeId);
                 while ($_ = array_pop($guids))
                 {
                     $sai = new SmartAI(SAI_SRC_TYPE_CREATURE, -$_, ['baseEntry' => $this->typeId, 'name' => $this->subject->getField('name', true), 'title' => ' [small](for GUID: '.$_.')[/small]']);
@@ -558,10 +558,15 @@ class NpcPage extends GenericPage
         if ($this->subject->getField('npcflag') & NPC_FLAG_TRAINER)
         {
             $teachQuery = '
-                SELECT  ts.SpellId AS ARRAY_KEY, ts.MoneyCost AS cost, ts.ReqSkillLine AS reqSkillId, ts.ReqSkillRank AS reqSkillValue, ts.ReqLevel AS reqLevel, ts.ReqAbility1 AS reqSpellId1, ts.reqAbility2 AS reqSpellId2
-                FROM    trainer_spell ts
-                JOIN    creature_default_trainer cdt ON cdt.TrainerId = ts.TrainerId
-                WHERE   cdt.Creatureid = ?d
+                SELECT    IFNULL(t2.SpellID, t1.SpellID) AS ARRAY_KEY,
+                          IFNULL(t2.MoneyCost, t1.MoneyCost) AS cost,
+                          IFNULL(t2.ReqSkillLine, t1.ReqSkillLine) AS reqSkillId,
+                          IFNULL(t2.ReqSkillRank, t1.ReqSkillRank) AS reqSkillValue,
+                          IFNULL(t2.ReqLevel, t1.ReqLevel) AS reqLevel,
+                          IFNULL(t2.ReqSpell, t1.ReqSpell) AS reqSkillId
+                FROM      npc_trainer t1
+                LEFT JOIN npc_trainer t2 ON t2.ID = IF(t1.SpellID < 0, -t1.SpellID, null)
+                WHERE     t1.ID = ?d
             ';
 
             if ($tSpells = DB::World()->select($teachQuery, $this->typeId))
@@ -585,21 +590,21 @@ class NpcPage extends GenericPage
                                 $this->extendGlobalIds(Type::SKILL, $_);
                                 if (!isset($extra[0]))
                                     $extra[0] = '$Listview.extraCols.condition';
-
-                                $data[$sId]['condition'][0][$this->typeId][] = [[CND_SKILL, $_, $train['reqSkillValue']]];
                             }
+
+                            $data[$sId]['condition'][0][$this->typeId][] = [[CND_SKILL, $_, $train['reqSkillValue']]];
                         }
 
-                        for ($i = 1; $i < 3; $i++)
+                        if ($_ = $train['reqSpellId'])
                         {
                             if ($_ = $train['reqSpellId'.$i])
                             {
                                 $this->extendGlobalIds(Type::SPELL, $_);
                                 if (!isset($extra[0]))
                                     $extra[0] = '$Listview.extraCols.condition';
-
-                                $data[$sId]['condition'][0][$this->typeId][] = [[CND_SPELL, $_]];
                             }
+
+                            $data[$sId]['condition'][0][$this->typeId][] = [[CND_SPELL, $_]];
                         }
 
                         if ($_ = $train['reqLevel'])
@@ -622,7 +627,7 @@ class NpcPage extends GenericPage
                     );
 
                     if ($extra)
-                        $tabData['extraCols'] = array_values($extra);
+                        $tabData['extraCols'] = $extra;
 
                     $this->lvTabs[] = [SpellList::$brickFile, $tabData];
                 }
@@ -632,7 +637,7 @@ class NpcPage extends GenericPage
         }
 
         // tab: sells
-        if ($sells = DB::World()->selectCol('SELECT item FROM npc_vendor nv WHERE entry = ?d UNION SELECT item FROM game_event_npc_vendor genv JOIN creature c ON genv.guid = c.guid WHERE c.id = ?d', $this->typeId, $this->typeId))
+        if ($sells = DB::World()->selectCol('SELECT item FROM npc_vendor nv WHERE entry = ?d UNION SELECT item FROM game_event_npc_vendor genv JOIN creature c ON genv.guid = c.guid WHERE c.id1 = ?d', $this->typeId, $this->typeId))
         {
             $soldItems = new ItemList(array(['id', $sells]));
             if (!$soldItems->error)
diff --git a/pages/quest.php b/pages/quest.php
index 977dea7..c45e13b 100644
--- a/pages/quest.php
+++ b/pages/quest.php
@@ -631,7 +631,7 @@ class QuestPage extends GenericPage
             // so yeah .. no recursion checking
             $vendors = DB::World()->selectCol('
                 SELECT nv.entry FROM npc_vendor nv WHERE nv.item = ?d UNION
-                SELECT c.id FROM game_event_npc_vendor genv JOIN creature c ON c.guid = genv.guid WHERE genv.item = ?d',
+                SELECT c.id1 FROM game_event_npc_vendor genv JOIN creature c ON c.guid = genv.guid WHERE genv.item = ?d',
                 $itemId, $itemId
             );
             foreach ($vendors as $v)
@@ -995,9 +995,9 @@ class QuestPage extends GenericPage
         }
 
         // tab: spawning pool (for the swarm)
-        if ($qp = DB::World()->selectCol('SELECT qpm2.questId FROM quest_pool_members qpm1 JOIN quest_pool_members qpm2 ON qpm1.poolId = qpm2.poolId WHERE qpm1.questId = ?d', $this->typeId))
+        if ($qp = DB::World()->selectCol('SELECT pq2.entry FROM pool_quest pq1 JOIN pool_quest pq2 ON pq1.pool_entry = pq2.pool_entry WHERE pq1.entry = ?d', $this->typeId))
         {
-            $max = DB::World()->selectCell('SELECT numActive FROM quest_pool_template qpt JOIN quest_pool_members qpm ON qpm.poolId = qpt.poolId WHERE qpm.questId = ?d', $this->typeId);
+            $max = DB::World()->selectCell('SELECT max_limit FROM pool_template pt JOIN pool_quest pq ON pq.pool_entry = pt.entry WHERE pq.entry = ?d', $this->typeId);
             $pooledQuests = new QuestList(array(['id', $qp]));
             if (!$pooledQuests->error)
             {
diff --git a/pages/skill.php b/pages/skill.php
index 21c5e03..8fffbc4 100644
--- a/pages/skill.php
+++ b/pages/skill.php
@@ -249,19 +249,32 @@ class SkillPage extends GenericPage
         // tab: trainers [npcs]
         if (in_array($this->cat, [-5, 6, 7, 8, 9, 11]))
         {
-            $mask = 0;
-            foreach (Game::$skillLineMask[-3] as $idx => $pair)
-                if ($pair[1] == $this->typeId)
-                    $mask |= 1 << $idx;
-
-            $spellIds = DB::Aowow()->selectCol(
-                'SELECT id FROM ?_spell WHERE (skillLine1 = ?d OR (skillLine1 > 0 AND skillLine2OrMask = ?d) {OR (skillLine1 = -3 AND skillLine2OrMask = ?d)})',
-                $this->typeId,
-                $this->typeId,
-                $mask ?: DBSIMPLE_SKIP
-            );
+            $list = [];
+            if (!empty(Game::$trainerTemplates[Type::SKILL][$this->typeId]))
+                $list = DB::World()->selectCol('SELECT DISTINCT ID FROM npc_trainer WHERE SpellID IN (?a) AND ID < 200000', Game::$trainerTemplates[Type::SKILL][$this->typeId]);
+            else
+            {
+                $mask = 0;
+                foreach (Game::$skillLineMask[-3] as $idx => $pair)
+                    if ($pair[1] == $this->typeId)
+                        $mask |= 1 << $idx;
+
+                $spellIds = DB::Aowow()->selectCol(
+                    'SELECT id FROM ?_spell WHERE typeCat IN (-11, 9) AND (skillLine1 = ?d OR (skillLine1 > 0 AND skillLine2OrMask = ?d) {OR (skillLine1 = -3 AND skillLine2OrMask = ?d)})',
+                    $this->typeId,
+                    $this->typeId,
+                    $mask ?: DBSIMPLE_SKIP
+                );
+
+                $list = $spellIds ? DB::World()->selectCol('
+                    SELECT    IF(t1.ID > 200000, t2.ID, t1.ID)
+                    FROM      npc_trainer t1
+                    LEFT JOIN npc_trainer t2 ON t2.SpellID = -t1.ID
+                    WHERE     t1.SpellID IN (?a)',
+                    $spellIds
+                ) : [];
+            }
 
-            $list = $spellIds ? DB::World()->selectCol('SELECT cdt.CreatureId FROM creature_default_trainer cdt JOIN trainer_spell ts ON ts.TrainerId = cdt.TrainerId WHERE ts.SpellID IN (?a)', $spellIds) : [];
             if ($list)
             {
                 $this->addScript([SC_JS_FILE, '?data=zones']);
diff --git a/pages/spell.php b/pages/spell.php
index d3b79a9..1af4f37 100644
--- a/pages/spell.php
+++ b/pages/spell.php
@@ -1084,10 +1084,10 @@ class SpellPage extends GenericPage
             if (count($src) == 1 && $src[0] == 1)           // multiple trainer
             {
                 $list = DB::World()->selectCol('
-                    SELECT  cdt.CreatureId
-                    FROM    creature_default_trainer cdt
-                    JOIN    trainer_spell ts ON ts.TrainerId = cdt.TrainerId
-                    WHERE   ts.SpellId = ?d',
+                    SELECT    IF(t1.ID > 200000, t2.ID, t1.ID)
+                    FROM      npc_trainer t1
+                    LEFT JOIN npc_trainer t2 ON t2.SpellID = -t1.ID
+                    WHERE     t1.SpellID = ?d',
                     $this->typeId
                 );
             }
diff --git a/setup/db_structure.sql b/setup/db_structure.sql
index e209fee..3388e20 100644
--- a/setup/db_structure.sql
+++ b/setup/db_structure.sql
@@ -511,7 +511,9 @@ CREATE TABLE `aowow_creature` (
   `dynamicFlags` int(10) unsigned NOT NULL DEFAULT 0,
   `family` tinyint(4) NOT NULL DEFAULT 0,
   `trainerType` tinyint(4) NOT NULL DEFAULT 0,
-  `trainerRequirement` smallint(5) unsigned NOT NULL DEFAULT 0,
+  `trainerSpell` mediumint(8) unsigned NOT NULL DEFAULT 0,
+  `trainerClass` tinyint(3) unsigned NOT NULL DEFAULT 0,
+  `trainerRace` tinyint(3) unsigned NOT NULL DEFAULT 0,
   `dmgMin` float unsigned NOT NULL DEFAULT 0,
   `dmgMax` float unsigned NOT NULL DEFAULT 0,
   `mleAtkPwrMin` smallint(5) unsigned NOT NULL DEFAULT 0,
diff --git a/setup/spell_learn_spell.sql b/setup/spell_learn_spell.sql
new file mode 100644
index 0000000..e1e1981
--- /dev/null
+++ b/setup/spell_learn_spell.sql
@@ -0,0 +1,17 @@
+--
+-- Table structure for table `spell_learn_spell`
+--
+
+DROP TABLE IF EXISTS `spell_learn_spell`;
+CREATE TABLE `spell_learn_spell` (
+  `entry` smallint(5) unsigned NOT NULL DEFAULT '0',
+  `SpellID` smallint(5) unsigned NOT NULL DEFAULT '0',
+  `Active` tinyint(3) unsigned NOT NULL DEFAULT '1',
+  PRIMARY KEY (`entry`,`SpellID`)
+) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED COMMENT='Item System';
+
+--
+-- Data for table `spell_learn_spell`
+--
+
+INSERT INTO `spell_learn_spell` VALUES (53428,53341,1),(53428,53343,1),(17002,24867,0),(24866,24864,0),(33872,47179,0),(33873,47180,0),(33943,34090,1),(58984,21009,1);
diff --git a/setup/tools/fileGen.class.php b/setup/tools/fileGen.class.php
index 1704019..04ad2a8 100644
--- a/setup/tools/fileGen.class.php
+++ b/setup/tools/fileGen.class.php
@@ -31,7 +31,7 @@ class FileGen
     );
     public static $datasets   = array(                      // name => [AowowDeps, TCDeps, info]
         'realms'        => [null, ['realmlist'],                                                                  'datasets/realms'],
-        'statistics'    => [null, ['player_levelstats', 'player_classlevelstats'],                                'datasets/statistics'],
+        'statistics'    => [null, ['tc_player_levelstats', 'tc_player_classlevelstats'],                                'datasets/statistics'],
         'simpleImg'     => [null, null,                                                                           'static/images/wow/[icons, Interface, ]/*'],
         'complexImg'    => [null, null,                                                                           'static/images/wow/[maps, talents/backgrounds, ]/*'],
         'talentCalc'    => [null, null,                                                                           'datasets/<locale>/talents-*'],
diff --git a/setup/tools/filegen/itemsets.func.php b/setup/tools/filegen/itemsets.func.php
index a0ba246..fab8890 100644
--- a/setup/tools/filegen/itemsets.func.php
+++ b/setup/tools/filegen/itemsets.func.php
@@ -92,8 +92,11 @@ if (!CLI)
 
                     if (!isset($setOut['setbonus'][$set['bonus'.$i]]))
                         $setOut['setbonus'][$set['bonus'.$i]] = $jsonBonus[$set['spell'.$i]];
-                    else
-                        Util::arraySumByKey($setOut['setbonus'][$set['bonus'.$i]], $jsonBonus[$set['spell'.$i]]);
+                    else {
+                        if ($jsonBonus[$set['spell'.$i]]) {
+                            Util::arraySumByKey($setOut['setbonus'][$set['bonus'.$i]], $jsonBonus[$set['spell'.$i]]);
+                        }
+                    }
                 }
 
                 foreach ($setOut['setbonus'] as $k => $v)
diff --git a/setup/tools/filegen/soundfiles.func.php b/setup/tools/filegen/soundfiles.func.php
index 28fa320..87c5407 100644
--- a/setup/tools/filegen/soundfiles.func.php
+++ b/setup/tools/filegen/soundfiles.func.php
@@ -32,18 +32,19 @@ if (!CLI)
             }
 
             // expect converted files as file.wav_ or file.mp3_
-            $filePath .= '_';
+            // $filePath .= '_';
 
             // just use the first locale available .. there is no support for multiple audio files anyway
             foreach (CLISetup::$expectedPaths as $locStr => $__)
             {
                 // get your paths straight!
                 $p = CLI::nicePath($filePath, CLISetup::$srcDir, $locStr);
-
-                if (CLISetup::fileExists($p))
+                $lower_p = CLI::nicePath(strtolower($filePath), CLISetup::$srcDir, $locStr);
+    
+                if (CLISetup::fileExists($p) or CLISetup::fileExists($lower_p))
                 {
                     // copy over to static/wowsounds/
-                    if (!copy($p, 'static/wowsounds/'.$fileId))
+                    if (!copy($p, 'static/wowsounds/'.$fileId) or !copy($lower_p, 'static/wowsounds/'.$fileId))
                     {
                         $ok = false;
                         CLI::write(' - could not copy '.CLI::bold($p).' into '.CLI::bold('static/wowsounds/'.$fileId), CLI::LOG_ERROR);
diff --git a/setup/tools/filegen/statistics.func.php b/setup/tools/filegen/statistics.func.php
index 5725af2..2fc768e 100644
--- a/setup/tools/filegen/statistics.func.php
+++ b/setup/tools/filegen/statistics.func.php
@@ -9,7 +9,7 @@ if (!CLI)
 
     /* deps:
      * player_classlevelstats
-     * player_levelstats
+     * tc_player_levelstats
     */
 
     // Create 'statistics'-file in datasets
@@ -58,7 +58,7 @@ if (!CLI)
         $race = function()
         {
             // { str, agi, sta, int, spi, raceMod1, raceMod2 }
-            $raceData = DB::World()->select('SELECT `race` AS ARRAY_KEY, MIN(`str`), MIN(`agi`), MIN(`sta`), MIN(`inte`), MIN(`spi`) FROM player_levelstats WHERE `level` = 1 GROUP BY `race` ORDER BY `race` ASC');
+            $raceData = DB::World()->select('SELECT `race` AS ARRAY_KEY, MIN(`str`), MIN(`agi`), MIN(`sta`), MIN(`inte`), MIN(`spi`) FROM tc_player_levelstats WHERE `level` = 1 GROUP BY `race` ORDER BY `race` ASC');
             foreach ($raceData as &$rd)
                 $rd = array_values($rd + [[], []]);
 
@@ -105,9 +105,9 @@ if (!CLI)
             {
                 // humans can't be hunter, shaman, druids (use tauren here)
                 if (in_array($class, [3, 7, 11]))
-                    $offset = array_values(DB::World()->selectRow('SELECT MIN(`str`), MIN(`agi`), MIN(`sta`), MIN(`inte`), MIN(`spi`) FROM player_levelstats WHERE `level` = 1 AND `race` = 6'));
+                    $offset = array_values(DB::World()->selectRow('SELECT MIN(`str`), MIN(`agi`), MIN(`sta`), MIN(`inte`), MIN(`spi`) FROM tc_player_levelstats WHERE `level` = 1 AND `race` = 6'));
                 else
-                    $offset = array_values(DB::World()->selectRow('SELECT MIN(`str`), MIN(`agi`), MIN(`sta`), MIN(`inte`), MIN(`spi`) FROM player_levelstats WHERE `level` = 1 AND `race` = 1'));
+                    $offset = array_values(DB::World()->selectRow('SELECT MIN(`str`), MIN(`agi`), MIN(`sta`), MIN(`inte`), MIN(`spi`) FROM tc_player_levelstats WHERE `level` = 1 AND `race` = 1'));
 
                 $gtData = DB::Aowow()->select('
                     SELECT mlecrt.idx - ?d AS ARRAY_KEY, mlecrt.chance * 100, splcrt.chance * 100, mlecrt.chance * 100 * ?f, baseHP5.ratio * 1, extraHP5.ratio * 1
@@ -128,9 +128,9 @@ if (!CLI)
                         pls.str - ?d, pls.agi - ?d, pls.sta - ?d, pls.inte - ?d, pls.spi - ?d,
                         pcls.basehp, IF(pcls.basemana <> 0, pcls.basemana, 100)
                     FROM
-                        player_levelstats pls
+                        tc_player_levelstats pls
                     JOIN
-                        player_classlevelstats pcls ON pls.level = pcls.level AND pls.class = pcls.class
+                        tc_player_classlevelstats pcls ON pls.level = pcls.level AND pls.class = pcls.class
                     WHERE
                         pls.race = ?d AND pls.class = ?d ORDER BY pls.level ASC',
                     $offset[0], $offset[1], $offset[2], $offset[3], $offset[4],
diff --git a/setup/tools/sqlgen/achievement.func.php b/setup/tools/sqlgen/achievement.func.php
index 829259a..555fffc 100644
--- a/setup/tools/sqlgen/achievement.func.php
+++ b/setup/tools/sqlgen/achievement.func.php
@@ -75,7 +75,7 @@ SqlGen::register(new class extends SetupScript
 
         CLI::write(' - serverside achievement data');
 
-        $serverAchievements = DB::World()->select('SELECT ID, IF(requiredFaction = -1, 3, IF(requiredFaction = 0, 2, 1)) AS "faction", mapID, points, flags, count, refAchievement FROM achievement_dbc{ WHERE id IN (?a)}',
+        $serverAchievements = DB::World()->select('SELECT ID, IF(Faction = -1, 3, IF(Faction = 0, 2, 1)) AS "faction", Supercedes AS mapID, Points AS points, Flags AS flags, Minimum_Criteria AS count, Shares_Criteria AS refAchievement FROM achievement_dbc{ WHERE id IN (?a)}',
             $ids ?: DBSIMPLE_SKIP
         );
         foreach ($serverAchievements as $sa)
diff --git a/setup/tools/sqlgen/creature.func.php b/setup/tools/sqlgen/creature.func.php
index 245a01d..89ac40e 100644
--- a/setup/tools/sqlgen/creature.func.php
+++ b/setup/tools/sqlgen/creature.func.php
@@ -43,15 +43,17 @@ SqlGen::register(new class extends SetupScript
                 unit_class,
                 unit_flags, unit_flags2, dynamicflags,
                 family,
-                IFNULL(t.Type, 0),
-                IFNULL(t.Requirement, 0),
+                trainer_type,
+                trainer_spell,
+                trainer_class,
+                trainer_race,
                 (CASE ct.exp WHEN 0 THEN min.damage_base WHEN 1 THEN min.damage_exp1 ELSE min.damage_exp2 END) AS dmgMin,
                 (CASE ct.exp WHEN 0 THEN max.damage_base WHEN 1 THEN max.damage_exp1 ELSE max.damage_exp2 END) AS dmgMax,
                 min.attackpower AS mleAtkPwrMin,
                 max.attackpower AS mleAtkPwrMax,
                 min.rangedattackpower AS rmgAtkPwrMin,
                 max.rangedattackpower AS rmgAtkPwrMax,
-                ct.type,
+                type,
                 type_flags,
                 lootid, pickpocketloot, skinloot,
                 IFNULL(cts0.Spell, 0), IFNULL(cts1.Spell, 0), IFNULL(cts2.Spell, 0), IFNULL(cts3.Spell, 0), IFNULL(cts4.Spell, 0), IFNULL(cts5.Spell, 0), IFNULL(cts6.Spell, 0), IFNULL(cts7.Spell, 0),
@@ -76,10 +78,6 @@ SqlGen::register(new class extends SetupScript
                 creature_classlevelstats min ON ct.unit_class = min.class AND ct.minlevel = min.level
             JOIN
                 creature_classlevelstats max ON ct.unit_class = max.class AND ct.maxlevel = max.level
-            LEFT JOIN
-                creature_default_trainer cdt ON cdt.CreatureId = ct.entry
-            LEFT JOIN
-                trainer t ON t.Id = cdt.TrainerId
             LEFT JOIN
                 creature_template_locale ctl2 ON ct.entry = ctl2.entry AND ctl2.`locale` = "frFR"
             LEFT JOIN
diff --git a/setup/tools/sqlgen/itemenchantment.func.php b/setup/tools/sqlgen/itemenchantment.func.php
index ef8870a..396e3e6 100644
--- a/setup/tools/sqlgen/itemenchantment.func.php
+++ b/setup/tools/sqlgen/itemenchantment.func.php
@@ -26,7 +26,7 @@ SqlGen::register(new class extends SetupScript
 
         DB::Aowow()->query($baseQuery);
 
-        $cuProcs = DB::World()->select('SELECT EnchantID AS ARRAY_KEY, Chance AS procChance, ProcsPerMinute AS ppmRate FROM spell_enchant_proc_data');
+        $cuProcs = DB::World()->select('SELECT `entry` AS ARRAY_KEY, customChance AS procChance, PPMChance AS ppmRate FROM spell_enchant_proc_data');
         foreach ($cuProcs as $id => $vals)
             DB::Aowow()->query('UPDATE ?_itemenchantment SET ?a WHERE id = ?d', $vals, $id);
 
diff --git a/setup/tools/sqlgen/mailtemplate.func.php b/setup/tools/sqlgen/mailtemplate.func.php
index abf4872..07aae8e 100644
--- a/setup/tools/sqlgen/mailtemplate.func.php
+++ b/setup/tools/sqlgen/mailtemplate.func.php
@@ -34,7 +34,7 @@ SqlGen::register(new class extends SetupScript
             SELECT
                 -ar.ID, 0,
                 IFNULL(ar.Subject, "") AS s0, IFNULL(arl2.Subject, "") AS s2, IFNULL(arl3.Subject, "") AS s3, IFNULL(arl4.Subject, "") AS s4, IFNULL(arl6.Subject, "") AS s6, IFNULL(arl8.Subject, "") AS s8,
-                IFNULL(ar.Body, "")    AS t0, IFNULL(arl2.Body, "")    AS t2, IFNULL(arl3.Body, "")    AS t3, IFNULL(arl4.Body, "")    AS t4, IFNULL(arl6.Body, "")    AS t6, IFNULL(arl8.Body, "")    AS t8,
+                IFNULL(ar.Body, "")    AS t0, IFNULL(arl2.Text, "")    AS t2, IFNULL(arl3.Text, "")    AS t3, IFNULL(arl4.Text, "")    AS t4, IFNULL(arl6.Text, "")    AS t6, IFNULL(arl8.Text, "")    AS t8,
                 ItemID
             FROM
                 achievement_reward ar
diff --git a/setup/tools/sqlgen/pet.func.php b/setup/tools/sqlgen/pet.func.php
index 691ec7c..4938035 100644
--- a/setup/tools/sqlgen/pet.func.php
+++ b/setup/tools/sqlgen/pet.func.php
@@ -51,7 +51,7 @@ SqlGen::register(new class extends SetupScript
             FROM
                 creature_template ct
             JOIN
-                creature c ON ct.entry = c.id
+                creature c ON ct.entry = c.id1
             WHERE
                 ct.type_flags & 0x1
             GROUP BY
diff --git a/setup/tools/sqlgen/quests.func.php b/setup/tools/sqlgen/quests.func.php
index 7afb5ed..556b72f 100644
--- a/setup/tools/sqlgen/quests.func.php
+++ b/setup/tools/sqlgen/quests.func.php
@@ -31,7 +31,7 @@ SqlGen::register(new class extends SetupScript
                 IFNULL(gesqr.eventEntry, 0) AS eventId,
                 IFNULL(qa.PrevQuestId, 0),
                 IFNULL(qa.NextQuestId, 0),
-                IFNULL(qa.BreadcrumbForQuestId, 0),
+                0 AS BreadcrumbForQuestId, -- IFNULL(qa.BreadcrumbForQuestId, 0),
                 IFNULL(qa.ExclusiveGroup, 0),
                 RewardNextQuest,
                 q.Flags,
@@ -53,7 +53,7 @@ SqlGen::register(new class extends SetupScript
                 IFNULL(qa.SourceSpellId, 0),
                 RewardXPDifficulty,                             -- QuestXP.dbc x level
                 RewardMoney,
-                RewardBonusMoney,
+                RewardMoneyDifficulty,
                 RewardDisplaySpell,                 RewardSpell,
                 RewardHonor * 124 * RewardKillHonor,            -- alt calculation in QuestDef.cpp -> Quest::CalculateHonorGain(playerLevel)
                 IFNULL(qa.RewardMailTemplateId, 0), IFNULL(qa.RewardMailDelay, 0),
diff --git a/setup/tools/sqlgen/source.func.php b/setup/tools/sqlgen/source.func.php
index ecc6000..20b8c62 100644
--- a/setup/tools/sqlgen/source.func.php
+++ b/setup/tools/sqlgen/source.func.php
@@ -505,7 +505,7 @@ SqlGen::register(new class extends SetupScript
         $vendors  = DB::World()->select(
            'SELECT   n.item, n.npc, SUM(n.qty) AS qty, it.class, it.subclass, it.spellid_1, it.spelltrigger_1, it.spellid_2, it.spelltrigger_2
             FROM     (SELECT item, entry AS npc, COUNT(1) AS qty FROM npc_vendor                                                       WHERE ExtendedCost NOT IN (?a) GROUP BY item, npc UNION
-                      SELECT item,  c.id AS npc, COUNT(1) AS qty FROM game_event_npc_vendor genv JOIN creature c ON c.guid = genv.guid WHERE ExtendedCost NOT IN (?a) GROUP BY item, npc) n
+                      SELECT item,  c.id1 AS npc, COUNT(1) AS qty FROM game_event_npc_vendor genv JOIN creature c ON c.guid = genv.guid WHERE ExtendedCost NOT IN (?a) GROUP BY item, npc) n
             JOIN     item_template it ON it.entry = n.item
             GROUP BY item, npc',
             $xCostIds, $xCostIds
@@ -1018,7 +1018,7 @@ SqlGen::register(new class extends SetupScript
     {
         CLI::write('   * #6  Trainer', CLI::LOG_BLANK, true, true);
 
-        $tNpcs = DB::World()->select('SELECT SpellID AS ARRAY_KEY, cdt.CreatureId AS entry, COUNT(1) AS qty FROM `trainer_spell` ts JOIN `creature_default_trainer` cdt ON cdt.TrainerId = ts.TrainerId GROUP BY ARRAY_KEY');
+        $tNpcs = DB::World()->select('SELECT SpellID AS ARRAY_KEY, ID AS entry, COUNT(1) AS qty FROM npc_trainer WHERE SpellID > 0 GROUP BY ARRAY_KEY');
 
         if (!$tNpcs)
         {
@@ -1037,7 +1037,7 @@ SqlGen::register(new class extends SetupScript
                 continue;
 
             $effects   = $tSpells[$spellId];
-            $trainerId = $npc['qty'] > 1 ? 0 : $npc['entry'];
+            $trainerId = $npc['entry'] > 200000 || $npc['qty'] > 1 ? 0 : $npc['entry'];
 
             $triggered = false;
             for ($i = 1; $i <= 3; $i++)
diff --git a/setup/tools/sqlgen/spawns.func.php b/setup/tools/sqlgen/spawns.func.php
index ac704d1..e5e0c90 100644
--- a/setup/tools/sqlgen/spawns.func.php
+++ b/setup/tools/sqlgen/spawns.func.php
@@ -17,7 +17,7 @@ SqlGen::register(new class extends SetupScript
     protected $dbcSourceFiles  = ['worldmaparea', 'map', 'dungeonmap', 'taxipathnode', 'soundemitters', 'areatrigger', 'areatable'];
 
     private $querys = array(
-        1 => ['SELECT c.guid, 1 AS "type", c.id AS typeId, c.spawntimesecs AS respawn, c.phaseMask, c.zoneId AS areaId, c.map, IFNULL(ca.path_id, 0) AS pathId, c.position_y AS `posX`, c.position_x AS `posY` ' .
+        1 => ['SELECT c.guid, 1 AS "type", c.id1 AS typeId, c.spawntimesecs AS respawn, c.phaseMask, c.zoneId AS areaId, c.map, IFNULL(ca.path_id, 0) AS pathId, c.position_y AS `posX`, c.position_x AS `posY` ' .
               'FROM creature c LEFT JOIN creature_addon ca ON ca.guid = c.guid',
               'creature spawns', Type::NPC],
 
@@ -34,11 +34,11 @@ SqlGen::register(new class extends SetupScript
               'areatrigger spawns', Type::AREATRIGGER],
 
         5 => ['SELECT c.guid, w.entry AS "npcOrPath", w.pointId AS "point", c.zoneId AS areaId, c.map, w.waittime AS "wait", w.location_y AS `posX`, w.location_x AS `posY` ' .
-              'FROM creature c JOIN script_waypoint w ON c.id = w.entry',
+              'FROM creature c JOIN script_waypoint w ON c.id1 = w.entry',
               'script_waypoint table', Type::NPC],
 
         6 => ['SELECT c.guid, w.entry AS "npcOrPath", w.pointId AS "point", c.zoneId AS areaId, c.map, 0 AS "wait", w.position_y AS `posX`, w.position_x AS `posY` ' .
-              'FROM creature c JOIN waypoints w ON c.id = w.entry',
+              'FROM creature c JOIN waypoints w ON c.id1 = w.entry',
               'waypoints table', Type::NPC],
 
         7 => ['SELECT c.guid, -w.id AS "npcOrPath", w.point, c.zoneId AS areaId, c.map, w.delay AS "wait", w.position_y AS `posX`, w.position_x AS `posY` ' .
@@ -198,7 +198,7 @@ SqlGen::register(new class extends SetupScript
 
         // get vehicle template accessories
         $accessories = DB::World()->select('
-            SELECT vta.accessory_entry AS typeId,  c.guid,  vta.entry, count(1) AS nSeats FROM vehicle_template_accessory vta LEFT JOIN creature c ON c.id = vta.entry GROUP BY accessory_entry,  c.guid UNION
+            SELECT vta.accessory_entry AS typeId,  c.guid,  vta.entry, count(1) AS nSeats FROM vehicle_template_accessory vta LEFT JOIN creature c ON c.id1 = vta.entry GROUP BY accessory_entry,  c.guid UNION
             SELECT  va.accessory_entry AS typeId, va.guid, 0 AS entry, count(1) AS nSeats FROM vehicle_accessory           va                                          GROUP BY accessory_entry, va.guid');
 
         // accessories may also be vehicles (e.g. "Kor'kron Infiltrator" is seated on "Kor'kron Suppression Turret" is seated on "Kor'kron Troop Transport")
diff --git a/setup/tools/sqlgen/spell.func.php b/setup/tools/sqlgen/spell.func.php
index 9575fdc..121e0db 100644
--- a/setup/tools/sqlgen/spell.func.php
+++ b/setup/tools/sqlgen/spell.func.php
@@ -14,7 +14,7 @@ SqlGen::register(new class extends SetupScript
     protected $command = 'spell';
 
     protected $tblDependencyAowow = ['icons'];
-    protected $tblDependencyTC    = ['item_template', 'creature_template', 'creature_template_addon', 'smart_scripts', 'trainer_spell', 'disables', 'spell_ranks', 'spell_dbc', 'skill_discovery_template'];
+    protected $tblDependencyTC    = ['item_template', 'creature_template', 'creature_template_addon', 'smart_scripts', 'npc_trainer', 'disables', 'spell_ranks', 'spell_dbc', 'skill_discovery_template'];
     protected $dbcSourceFiles     = ['spell', 'spellradius', 'spellduration', 'spellrunecost', 'spellcasttimes', 'skillline', 'skilllineability', 'skillraceclassinfo', 'talent', 'talenttab', 'glyphproperties', 'spellicon'];
 
     public function generate(array $ids = []) : bool
@@ -24,10 +24,10 @@ SqlGen::register(new class extends SetupScript
                 id AS ARRAY_KEY,
                 id,
                 0 AS category,
-                Dispel,
+                DispelType AS Dispel,
                 Mechanic,
                 Attributes,         AttributesEx,       AttributesEx2,      AttributesEx3,      AttributesEx4,      AttributesEx5,      AttributesEx6,      AttributesEx7,
-                Stances,            StancesNot,
+                ShapeshiftMask AS Stances,     ShapeshiftExclude AS StancesNot,
                 Targets,
                 0 AS spellFocus,
                 CastingTimeIndex,
@@ -41,36 +41,41 @@ SqlGen::register(new class extends SetupScript
                 0 AS powerPerSecond,
                 0 AS powerPerSecondPerLevel,
                 RangeIndex,
-                StackAmount,
+                CumulativeAura AS StackAmount,
                 0 AS tool1,         0 AS tool2,
                 0 AS reagent1,      0 AS reagent2,      0 AS reagent3,      0 AS reagent4,      0 AS reagent5,      0 AS reagent6,      0 AS reagent7,      0 AS reagent8,
                 0 AS reagentCount1, 0 AS reagentCount2, 0 AS reagentCount3, 0 AS reagentCount4, 0 AS reagentCount5, 0 AS reagentCount6, 0 AS reagentCount7, 0 AS reagentCount8,
                 EquippedItemClass,
-                EquippedItemSubClassMask,
-                EquippedItemInventoryTypeMask,
-                Effect1,                                Effect2,                                Effect3,
-                EffectDieSides1,                        EffectDieSides2,                        EffectDieSides3,
-                EffectRealPointsPerLevel1,              EffectRealPointsPerLevel2,              EffectRealPointsPerLevel3,
-                EffectBasePoints1,                      EffectBasePoints2,                      EffectBasePoints3,
-                EffectMechanic1,                        EffectMechanic2,                        EffectMechanic3,
-                EffectImplicitTargetA1,                 EffectImplicitTargetA2,                 EffectImplicitTargetA3,
-                EffectImplicitTargetB1,                 EffectImplicitTargetB2,                 EffectImplicitTargetB3,
-                EffectRadiusIndex1,                     EffectRadiusIndex2,                     EffectRadiusIndex3,
-                EffectApplyAuraName1,                   EffectApplyAuraName2,                   EffectApplyAuraName3,
-                EffectAmplitude1,                       EffectAmplitude2,                       EffectAmplitude3,
-                EffectMultipleValue1,                   EffectMultipleValue2,                   EffectMultipleValue3,
+                EquippedItemSubclass AS EquippedItemSubClassMask,
+                EquippedItemInvTypes AS EquippedItemInventoryTypeMask,
+                Effect_1 AS Effect1,                                Effect_2 AS Effect2,                                Effect_3 AS Effect3,
+                EffectDieSides_1 AS EffectDieSides1,                        EffectDieSides_2 AS EffectDieSides2,                        EffectDieSides_3 AS EffectDieSides3,
+                EffectRealPointsPerLevel_1 AS EffectRealPointsPerLevel1,              EffectRealPointsPerLevel_2 AS EffectRealPointsPerLevel2,              EffectRealPointsPerLevel_3 AS EffectRealPointsPerLevel3,
+                EffectBasePoints_1 AS EffectBasePoints1,                      EffectBasePoints_2 AS EffectBasePoints2,                      EffectBasePoints_3 AS EffectBasePoints3,
+                EffectMechanic_1 AS EffectMechanic1,                        EffectMechanic_2 AS EffectMechanic2,                        EffectMechanic_3 AS EffectMechanic3,
+                ImplicitTargetA_1 AS EffectImplicitTargetA1,                 ImplicitTargetA_2 AS EffectImplicitTargetA2,                 ImplicitTargetA_3 AS EffectImplicitTargetA3,
+                ImplicitTargetB_1 AS EffectImplicitTargetB1,                 ImplicitTargetB_2 AS EffectImplicitTargetB2,                 ImplicitTargetB_3 AS EffectImplicitTargetB3,
+                EffectRadiusIndex_1 AS EffectRadiusIndex1,                     EffectRadiusIndex_2 AS EffectRadiusIndex2,                     EffectRadiusIndex_3 AS EffectRadiusIndex3,
+                EffectAura_1 AS EffectApplyAuraName1,                   EffectAura_2 AS EffectApplyAuraName2,                   EffectAura_3 AS EffectApplyAuraName3,
+                EffectAuraPeriod_1 AS EffectAmplitude1,                       EffectAuraPeriod_2 AS EffectAmplitude2,                       EffectAuraPeriod_3 AS EffectAmplitude3,
+                EffectMultipleValue_1 AS EffectMultipleValue1,                   EffectMultipleValue_2 AS EffectMultipleValue2,                   EffectMultipleValue_3 AS EffectMultipleValue3,
                 0 AS effect1ChainTarget,                0 AS effect2ChainTarget,                0 AS effect3ChainTarget,
-                EffectItemType1,                        EffectItemType2,                        EffectItemType3,
-                EffectMiscValue1,                       EffectMiscValue2,                       EffectMiscValue3,
-                EffectMiscValueB1,                      EffectMiscValueB2,                      EffectMiscValueB3,
-                EffectTriggerSpell1,                    EffectTriggerSpell2,                    EffectTriggerSpell3,
+                EffectItemType_1 AS EffectItemType1,                        EffectItemType_2 AS EffectItemType2,                        EffectItemType_3 AS EffectItemType3,
+                EffectMiscValue_1 AS EffectMiscValue1,                       EffectMiscValue_2 AS EffectMiscValue2,                       EffectMiscValue_3 AS EffectMiscValue3,
+                EffectMiscValueB_1 AS EffectMiscValueB1,                      EffectMiscValueB_2 AS EffectMiscValueB2,                      EffectMiscValueB_3 AS EffectMiscValueB3,
+                EffectTriggerSpell_1 AS EffectTriggerSpell1,                    EffectTriggerSpell_2 AS EffectTriggerSpell2,                    EffectTriggerSpell_3 AS EffectTriggerSpell3,
                 0 AS effect1PointsPerComboPoint,        0 AS effect2PointsPerComboPoint,        0 AS effect3PointsPerComboPoint,
-                EffectSpellClassMaskA1,                 EffectSpellClassMaskA2,                 EffectSpellClassMaskA3,
-                EffectSpellClassMaskB1,                 EffectSpellClassMaskB2,                 EffectSpellClassMaskB3,
-                EffectSpellClassMaskC1,                 EffectSpellClassMaskC2,                 EffectSpellClassMaskC3,
+                EffectSpellClassMaskA_1 AS EffectSpellClassMaskA1,                 EffectSpellClassMaskA_2 AS EffectSpellClassMaskA2,                 EffectSpellClassMaskA_3 AS EffectSpellClassMaskA3,
+                EffectSpellClassMaskB_1 AS EffectSpellClassMaskB1,                 EffectSpellClassMaskB_2 AS EffectSpellClassMaskB2,                 EffectSpellClassMaskB_3 AS EffectSpellClassMaskB3,
+                EffectSpellClassMaskC_1 AS EffectSpellClassMaskC1,                 EffectSpellClassMaskC_2 AS EffectSpellClassMaskC2,                 EffectSpellClassMaskC_3 AS EffectSpellClassMaskC3,
                 0 AS iconId,                            0 AS iconIdAlt,
                 0 AS rankId,                            0 AS spellVisualId1,
-                CONCAT("Serverside - ",SpellName) AS name_loc0,CONCAT("Serverside - ",SpellName) AS name_loc2,CONCAT("Serverside - ",SpellName) AS name_loc3,CONCAT("Serverside - ",SpellName) AS name_loc4,CONCAT("Serverside - ",SpellName) AS name_loc6,CONCAT("Serverside - ",SpellName) AS name_loc8,
+                CONCAT("Serverside - ",Name_Lang_enUS) AS name_loc0,
+                CONCAT("Serverside - ",Name_Lang_enUS) AS name_loc2,
+                CONCAT("Serverside - ",Name_Lang_enUS) AS name_loc3,
+                CONCAT("Serverside - ",Name_Lang_enUS) AS name_loc4,
+                CONCAT("Serverside - ",Name_Lang_enUS) AS name_loc6,
+                CONCAT("Serverside - ",Name_Lang_enUS) AS name_loc8,
                 "" AS rank_loc0,                        "" AS rank_loc2,                        "" AS rank_loc3,                        "" AS rank_loc4,                        "" AS rank_loc6,                        "" AS rank_loc8,
                 "" AS description_loc0,                 "" AS description_loc2,                 "" AS description_loc3,                 "" AS description_loc4,                 "" AS description_loc6,                 "" AS description_loc8,
                 "" AS buff_loc0,                        "" AS buff_loc2,                        "" AS buff_loc3,                        "" AS buff_loc4,                        "" AS buff_loc6,                        "" AS buff_loc8,
@@ -78,13 +83,13 @@ SqlGen::register(new class extends SetupScript
                 0 AS startRecoveryCategory,
                 0 AS startRecoveryTime,
                 MaxTargetLevel,
-                SpellFamilyName,
-                SpellFamilyFlags1,
-                SpellFamilyFlags2,
-                SpellFamilyFlags3,
-                MaxAffectedTargets,
-                DmgClass,
-                DmgMultiplier1,                         DmgMultiplier2,                         DmgMultiplier3,
+                SpellClassSet AS SpellFamilyName,
+                SpellClassMask_1 AS SpellFamilyFlags1,
+                SpellClassMask_2 AS SpellFamilyFlags2,
+                SpellClassMask_3 AS SpellFamilyFlags3,
+                MaxTargets AS MaxAffectedTargets,
+                DefenseType AS DmgClass,
+                EffectBonusMultiplier_1 AS DmgMultiplier1,                         EffectBonusMultiplier_2 AS DmgMultiplier2,                         EffectBonusMultiplier_3 AS DmgMultiplier3,
                 0 AS toolCategory1,                     0 AS toolCategory2,
                 SchoolMask,
                 0 AS runeCostId,
@@ -348,7 +353,7 @@ SqlGen::register(new class extends SetupScript
         }
 
         // fill learnedAt, trainingCost from trainer
-        if ($trainer = DB::World()->select('SELECT SpellID AS ARRAY_KEY, MIN(ReqSkillRank) AS reqSkill, MIN(MoneyCost) AS cost, ReqAbility1 AS reqSpellId, COUNT(*) AS count FROM trainer_spell GROUP BY SpellID'))
+        if ($trainer = DB::World()->select('SELECT SpellID AS ARRAY_KEY, MIN(ReqSkillRank) AS reqSkill, MIN(MoneyCost) AS cost, COUNT(*) AS count FROM npc_trainer GROUP BY SpellID'))
         {
             $spells = DB::Aowow()->select('SELECT id AS ARRAY_KEY, effect1Id, effect2Id, effect3Id, effect1TriggerSpell, effect2TriggerSpell, effect3TriggerSpell FROM dbc_spell WHERE id IN (?a)', array_keys($trainer));
             $links  = [];
@@ -372,7 +377,7 @@ SqlGen::register(new class extends SetupScript
                     $l = &$links[$effects['effect'.$i.'TriggerSpell']];
 
                     if (!isset($l))
-                        $l = [$tData['reqSkill'], $tData['cost'], $tData['reqSpellId']];
+                        $l = [$tData['reqSkill'], $tData['cost']];
 
                     if ($tData['reqSkill'] < $l[0])
                         $l[0] = $tData['reqSkill'];
@@ -386,7 +391,7 @@ SqlGen::register(new class extends SetupScript
                     $l = &$links[$spell];
 
                     if (!isset($l))
-                        $l = [$tData['reqSkill'], $tData['cost'], $tData['reqSpellId']];
+                        $l = [$tData['reqSkill'], $tData['cost']];
 
                     if ($tData['reqSkill'] < $l[0])
                         $l[0] = $tData['reqSkill'];
@@ -503,10 +508,26 @@ SqlGen::register(new class extends SetupScript
             if (isset($itemInfo[$itemId]))
                 DB::Aowow()->query('UPDATE ?_spell s, ?_icons ic, dbc_spellicon si SET s.iconIdAlt = ?d, s.cuFlags = s.cuFlags | ?d WHERE s.iconIdBak = si.id AND ic.name = LOWER(SUBSTRING_INDEX(si.iconPath, "\\\\", -1)) AND s.id = ?d', -$itemInfo[$itemId]['d'], ((7 - $itemInfo[$itemId]['q']) << 8), $sId);
 
+        // apply specializations [trainerTemplate => reqSpell]
+        $specs = array(
+            201007 => 9788,
+            201008 => 9787,
+            201015 => 20222,
+            201016 => 20219,
+            201030 => 10660,
+            201031 => 10656,
+            201032 => 10658
+        );
+        foreach ($specs as $tt => $req)
+            if ($spells = DB::World()->selectCol('SELECT SpellID FROM npc_trainer WHERE ID = ?d', $tt))
+                DB::Aowow()->query('UPDATE ?_spell SET reqSpellId = ?d WHERE id IN (?a)', $req, $spells);
+
         $itemReqs = DB::World()->selectCol('SELECT entry AS ARRAY_KEY, requiredSpell FROM item_template WHERE requiredSpell NOT IN (?a)', [0, 34090, 34091]); // not riding
         foreach ($itemReqs AS $itemId => $req)
             DB::Aowow()->query('UPDATE ?_spell SET reqSpellId = ?d WHERE skillLine1 IN (?a) AND effect1CreateItemId = ?d', $req, [SKILL_BLACKSMITHING, SKILL_LEATHERWORKING, SKILL_TAILORING, SKILL_ENGINEERING], $itemId);
 
+        DB::Aowow()->query('UPDATE ?_spell SET reqSpellId = id WHERE id IN (?a)', [9788, 9787, 20222, 20219, 10660, 10656, 10658, 26797, 26798, 26801, 17039, 17040, 17041]);
+
         // setting icons
         DB::Aowow()->query('UPDATE ?_spell s, ?_icons ic, dbc_spellicon si SET s.iconId = ic.id WHERE s.iconIdBak = si.id AND ic.name = LOWER(SUBSTRING_INDEX(si.iconPath, "\\\\", -1))');
 
diff --git a/setup/tools/sqlgen/spelldifficulty.func.php b/setup/tools/sqlgen/spelldifficulty.func.php
index 24ed231..1d3f4f7 100644
--- a/setup/tools/sqlgen/spelldifficulty.func.php
+++ b/setup/tools/sqlgen/spelldifficulty.func.php
@@ -21,7 +21,7 @@ SqlGen::register(new class extends SetupScript
 
         DB::Aowow()->query('INSERT INTO ?_spelldifficulty SELECT * FROM dbc_spelldifficulty');
 
-        $rows = DB::World()->select('SELECT spellid0, spellid1, spellid2, spellid3 FROM spelldifficulty_dbc');
+        $rows = DB::World()->select('SELECT DifficultySpellID_1, DifficultySpellID_2, DifficultySpellID_3, DifficultySpellID_4 FROM spelldifficulty_dbc');
         foreach ($rows as $r)
             DB::Aowow()->query('INSERT INTO ?_spelldifficulty VALUES (?a)', array_values($r));
 
diff --git a/setup/tools/sqlgen/taxi.func.php b/setup/tools/sqlgen/taxi.func.php
index 788a0af..8c2fe73 100644
--- a/setup/tools/sqlgen/taxi.func.php
+++ b/setup/tools/sqlgen/taxi.func.php
@@ -106,7 +106,7 @@ SqlGen::register(new class extends SetupScript
 
         // all available flightmaster
         $fMaster = DB::World()->select(
-            'SELECT ct.entry, ct.faction, c.map, c.position_x AS posX, c.position_y AS posY FROM creature_template ct JOIN creature c ON c.id = ct.entry WHERE ct.npcflag & ?d OR c.npcflag & ?d',
+            'SELECT ct.entry, ct.faction, c.map, c.position_x AS posX, c.position_y AS posY FROM creature_template ct JOIN creature c ON c.id1 = ct.entry WHERE ct.npcflag & ?d OR c.npcflag & ?d',
             NPC_FLAG_FLIGHT_MASTER, NPC_FLAG_FLIGHT_MASTER
         );
 
diff --git a/setup/tools/sqlgen/zones.func.php b/setup/tools/sqlgen/zones.func.php
index 54707b1..98fdbe1 100644
--- a/setup/tools/sqlgen/zones.func.php
+++ b/setup/tools/sqlgen/zones.func.php
@@ -13,7 +13,7 @@ SqlGen::register(new class extends SetupScript
 
     protected $command = 'zones';
 
-    protected $tblDependencyTC = ['access_requirement'];
+    protected $tblDependencyTC = ['dungeon_access_template', 'dungeon_access_requirements'];
     protected $dbcSourceFiles  = ['worldmaptransforms', 'worldmaparea', 'map', 'mapdifficulty', 'areatable', 'lfgdungeons', 'battlemasterlist', 'dungeonmap'];
 
     public function generate(array $ids = []) : bool
@@ -133,24 +133,49 @@ SqlGen::register(new class extends SetupScript
 
         DB::Aowow()->query('REPLACE INTO ?_zones VALUES (?a)', $baseData);
 
-        // get requirements from world.access_requirement
+        /*
+            requirement_type = 0 => achievements
+            requirement_type = 1 => quests
+            requirement_type = 2 => items
+         */
+        // get requirements from world.dungeon_access_template and dungeon_access_requirements (both ex "access_requirements")
         $zoneReq = DB::World()->select('
             SELECT
-                mapId AS ARRAY_KEY,
-                MIN(level_min) AS reqLevel,
-                MAX(IF(difficulty > 0, level_min,  0)) AS heroicLevel,
-                MAX(IF(difficulty = 0, item_level, 0)) AS reqItemLevelN,
-                MAX(IF(difficulty > 0, item_level, 0)) AS reqItemLevelH,
-                CONCAT_WS(" ", GROUP_CONCAT(IF(difficulty = 0 AND item, item, NULL) SEPARATOR " "), GROUP_CONCAT(IF(difficulty = 0 AND item2 AND item2 <> item, item2, NULL) SEPARATOR " ")) AS reqItemN,
-                CONCAT_WS(" ", GROUP_CONCAT(IF(difficulty > 0 AND item, item, NULL) SEPARATOR " "), GROUP_CONCAT(IF(difficulty > 0 AND item2 AND item2 <> item, item2, NULL) SEPARATOR " ")) AS reqItemH,
-                CONCAT_WS(" ", GROUP_CONCAT(IF(difficulty = 0 AND quest_done_A, quest_done_A, NULL) SEPARATOR " "), GROUP_CONCAT(IF(difficulty = 0 AND quest_done_H AND quest_done_H <> quest_done_A, quest_done_H, NULL) SEPARATOR " ")) AS reqQuestN,
-                CONCAT_WS(" ", GROUP_CONCAT(IF(difficulty > 0 AND quest_done_A, quest_done_A, NULL) SEPARATOR " "), GROUP_CONCAT(IF(difficulty > 0 AND quest_done_H AND quest_done_H <> quest_done_A, quest_done_H, NULL) SEPARATOR " ")) AS reqQuestH,
-                CONCAT_WS(" ", GROUP_CONCAT(IF(difficulty = 0 AND completed_achievement, completed_achievement, NULL) SEPARATOR " ")) AS reqAchievementN,
-                CONCAT_WS(" ", GROUP_CONCAT(IF(difficulty > 0 AND completed_achievement, completed_achievement, NULL) SEPARATOR " ")) AS reqAchievementH
+                map_id AS ARRAY_KEY,
+                MIN(min_level) AS reqLevel,
+                MAX(IF(difficulty > 0, min_level,  0)) AS heroicLevel,
+                MAX(IF(difficulty = 0, min_avg_item_level, 0)) AS reqItemLevelN,
+                MAX(IF(difficulty > 0, min_avg_item_level, 0)) AS reqItemLevelH,
+
+                CONCAT_WS(" ",
+                    GROUP_CONCAT(IF(difficulty = 0 AND requirement_type = 2 AND requirement_id, requirement_id, NULL) SEPARATOR " ")
+                ) AS reqItemN,
+
+                CONCAT_WS(" ",
+                    GROUP_CONCAT(IF(difficulty > 0 AND requirement_type = 2 AND requirement_id, requirement_id, NULL) SEPARATOR " ")
+                ) AS reqItemH,
+
+                CONCAT_WS(" ",
+                    GROUP_CONCAT(IF(difficulty = 0 AND requirement_type = 1 AND requirement_id, requirement_id, NULL) SEPARATOR " ")
+                ) AS reqQuestN,
+
+                CONCAT_WS(" ",
+                    GROUP_CONCAT(IF(difficulty > 0 AND requirement_type = 1 AND requirement_id, requirement_id, NULL) SEPARATOR " ")
+                ) AS reqQuestH,
+
+                CONCAT_WS(" ",
+                    GROUP_CONCAT(IF(difficulty = 0 AND requirement_type = 0 AND requirement_id, requirement_id, NULL) SEPARATOR " ")
+                ) AS reqAchievementN,
+
+                CONCAT_WS(" ",
+                    GROUP_CONCAT(IF(difficulty > 0 AND requirement_type = 0 AND requirement_id, requirement_id, NULL) SEPARATOR " ")
+                ) AS reqAchievementH
             FROM
-                access_requirement
+                dungeon_access_template dat
+            LEFT JOIN
+                dungeon_access_requirements dar ON dar.dungeon_access_id = dat.id
             GROUP BY
-                mapId
+                map_id
         ');
 
         $heroics = DB::Aowow()->selectCol('SELECT DISTINCT mapId FROM aowow_zones WHERE type IN (5, 8)');
diff --git a/static/js/locale_zhcn.js b/static/js/locale_zhcn.js
index c4f5bb5..ef3c820 100644
--- a/static/js/locale_zhcn.js
+++ b/static/js/locale_zhcn.js
@@ -974,7 +974,7 @@ var mn_petCalc = [
 var mn_database = [
     [, "物品"],
     [0,"物品","?items",mn_items],
-    [2,"物品组合","?itemsets",mn_itemSets],
+    [2,"物品套装","?itemsets",mn_itemSets],
     [101,"附魔","?enchantments",mn_enchantments],
     [, "角色"],
     [9,"成就","?achievements",mn_achievements],
diff --git a/template/pages/home.tpl.php b/template/pages/home.tpl.php
index c64eef7..af09529 100644
--- a/template/pages/home.tpl.php
+++ b/template/pages/home.tpl.php
@@ -82,10 +82,13 @@ endif;
 
     <div class="footer">
         <div class="footer-links linklist">
-            <a href="?aboutus"><?=Lang::main('aboutUs'); ?></a>|<a href="https://github.com/Sarjuuk/aowow" target="_blank">Github</a>|<a href="#" id="footer-links-language"><?=Lang::main('language'); ?></a>
+            <a href="?aboutus"><?=Lang::main('aboutUs'); ?></a>|<a href="https://github.com/azerothcore/aowow" target="_blank">Github</a>|<a href="#" id="footer-links-language"><?=Lang::main('language'); ?></a>
         </div>
         <div class="footer-copy">
-            &#12484; 2024 Aowow<br />rev. <?=AOWOW_REVISION; ?>
+            &#12484; 2023 Aowow<br />
+            rev. <?=AOWOW_REVISION; ?>
+            <br>
+            AzerothCore rev: <a href="https://github.com/azerothcore/azerothcore-wotlk/commit/b874760efee9a1f31a121effb1a56788a7d82e34">b874760</a>
         </div>
     </div>
 
